apiVersion: apps/v1
kind: Deployment
metadata:
  name: hw-{{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hw-{{ .Release.Namespace }}
  template:
    metadata:
      labels:
        app: hw-{{ .Release.Namespace }}
    spec:
      containers:
      - name: hw-{{ .Release.Namespace }}
        image: {{ required "docker_prefix undefined" .Values.docker_prefix }}hybridocr_website:{{ .Release.Namespace }}
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        livenessProbe:
          httpGet:
            path: /status/alive
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /status/ready
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          requests:
            cpu: "250m"
            memory: "256Mi"
          limits:
            cpu: "1000m"
            memory: "1024Mi"
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: HYBRIDOCR_CONFIG_FILE
          value: "/secret/config.json"
        volumeMounts:
        - name: config-volume
          mountPath: /secret/config.json
          subPath: config.json
          readOnly: true
      volumes:
      - name: config-volume
        secret:
          secretName: config-{{ .Release.Namespace }}
---
apiVersion: v1
kind: Service
metadata:
  name: hw-{{ .Release.Namespace }}
  labels:
    app: hw-{{ .Release.Namespace }}
spec:
  type: ClusterIP
  selector:
    app: hw-{{ .Release.Namespace }}
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
